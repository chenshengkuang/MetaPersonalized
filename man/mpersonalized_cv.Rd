% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mersonalized_cv.R
\name{mpersonalized_cv}
\alias{mpersonalized_cv}
\title{Meta-analysis/Multiple Outcomes for Personalized Medicine with Cross Validation}
\usage{
mpersonalized_cv(problem = c("meta-analysis", "multiple outcomes"), X, Trt, P,
  Xlist, Ylist, Trtlist, Plist, typelist = NULL, penalty = c("lasso", "GL",
  "SGL", "fused", "lasso+fused", "GL+fused", "SGL+fused"), lambda1 = NULL,
  lambda2 = NULL, unique_rule_lambda = NULL, alpha = NULL,
  unique_rule = FALSE, cv_folds = 5)
}
\arguments{
\item{problem}{a character specifiy whether you want to solve "meta-analysis" or "multiple outcomes" problem. For "meta-analysis" problem,
the user should supply \code{Xlist}, \code{Ylist}, \code{Trtlist} and \code{Plist}. For "multiple outcomes" problem,
the user should supply \code{X}, \code{Ylist}, \code{Trt} and \code{P}.}

\item{X}{the covariate matrix that should be supplied when the problem is "multiple outcomes" with rows indicating subjects and columns indicating covariates.}

\item{Trt}{the treatment vector that should be supplied when the problem is "multiple outcomes". It should be coded as 0 or 1.}

\item{P}{the propensity score vector when the problem is "multiple outcomes".}

\item{Xlist}{a list object with \eqn{k}th element denoting the covariate matrix of study \eqn{k}. This should be supplied when the problem is
"meta-analysis".}

\item{Ylist}{When the problem is "meta-analysis", \code{Ylist} should be a list object with \eqn{k}th element denoting the response vector of study \eqn{k}. When the
problem is "multiple outcomes", \code{Ylist} should be a list object with \eqn{k}th element denoting the \eqn{k}th outcome.}

\item{Trtlist}{a list object with \eqn{k}th element denoting the treatment vector of study \eqn{k} (coded as 0 or 1). This should be supplied when the problem is
"meta-analysis".}

\item{Plist}{a list object with \eqn{k}the element denoting the propensity score vector of study \eqn{k}.}

\item{penalty}{For different rules, the penalty could be "none", "lasso", "GL", "SGL", "fused",
"lasso+fused", "GL+fused", "SGL+fused". For unique rule, the penalty could be "none" or "lasso".}

\item{lambda1}{lambda1 supplied in the framework when different rules are used.}

\item{lambda2}{lambda2 supplied in the framework when different rules are used.}

\item{unique_rule_lambda}{\eqn{\lambda} when unique rule is used.}

\item{alpha}{alpha in the framework when different rules are used.}

\item{unique_rule}{a logical value, whether a unique treatment rule is required}

\item{cv_folds}{number of folds needed for cross-validation, default is 5}

\item{typlelist}{a list object with \eqn{k}th element denoting the type of response corresponding to the \eqn{k}th element in the list \code{Ylist}.
Each element should be "continuous" or "binary".}
}
\value{
an S3 object of class "mp_cv", which contains the information of the model with the best fitted lambda. It can be supplied to the predict function.
}
\details{
This function implments basically implements \code{mpersonalized} but use cross validatation for the tuning of penalty parameter.
 The optimal penalty parameter is selected by minimizing \deqn{\sum_{i=1}^{n_k}\frac{|\hat{C}_k(X_{i})|}{\sum_{i=1}^{n_k}|\hat{C}_k(X_{i})|}\bigl [1\{\hat{C}_k(X_{i})>0\}-g_k(X_{i})\bigr]^2}
 where \eqn{\hat{C}_k(X_{i})} in the leave-out fold is separately estimated from the training set.
}
