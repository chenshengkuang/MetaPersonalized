Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "lasso+fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.02), lambda2 = c(0.01, 0.02),  alpha = 0.5)
str(model_info)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "lasso+fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.02), lambda2 = c(0.01, 0.02),  alpha = 0.5)
model_info$iterslist
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "lasso+fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.02), lambda2 = c(0.01, 0.02),  alpha = 1)
model_info$iterslist
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "lasso+fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.1), lambda2 = c(0.01, 0.2),  alpha = 1)
model_info$iterslist
model_info$betalist
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.1), lambda2 = c(0.01, 0.2),  alpha = 1)
model_info$lambda
str(model_info)
model_info$alpha
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.1), lambda2 = c(0.01, 0.2),  alpha = 1)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.1), lambda2 = c(0.01, 0.2),  alpha = 1)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.1), lambda2 = c(0.01, 0.2),  alpha = 1)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.1), lambda2 = c(0.01, 0.2),  alpha = 1)
str(model_info)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.1), lambda2 = c(0.01, 0.2))
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.1), lambda2 = c(0.01, 0.2))
ifelse(c(1,2,3)> 2, 1, 0)
sum(c(1,2,3) == 0)
sum(c(0,2,3) == 0)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.1), lambda2 = c(0.01, 0.2))
model_info$alpha
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "fused", unique_rule = FALSE,
lambda1 = 0, lambda2 = c(0.01, 0.2))
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "fused", unique_rule = FALSE,
lambda1 = 0, lambda2 = c(0.01, 0.2))
model_info$alpha
str(model_info)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "lasso + fused", unique_rule = FALSE,
lambda1 = 0, lambda2 = c(0.01, 0.2))
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "lasso+fused", unique_rule = FALSE,
lambda1 = 0, lambda2 = c(0.01, 0.2))
model_info$alpha
model_info$lambda
model_info$betalist
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "lasso+fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.2), lambda2 = c(0.01, 0.2))
model_info$betalist
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "lasso+fused", unique_rule = FALSE,
lambda1 = c(0.01, 0.2), lambda2 = c(0.01, 0.2))
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "lasso+fused", unique_rule = FALSE,
lambda1 = c(0, 0.2), lambda2 = c(0.01, 0.2))
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "fused", unique_rule = FALSE,
lambda1 = c(0, 0.2), lambda2 = c(0.01, 0.2))
matrix(c(1,2,3), nrow = 1, ncol = 3)
A = matrix(c(1,2,3), nrow = 1, ncol = 3)
which.max(A, arr.ind = TRUE)
which(A == max(A), arr.ind = TRUE)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, lambda1 = c(0.01, 0.02), lambda2 = c(0.01, 0.02),
model = "fused", cv_folds = 2, alpha = 0.5)
str(model_cv)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, lambda1 = c(0.01, 0.02), lambda2 = c(0.01, 0.02),
model = "lasso+fused", cv_folds = 2, alpha = 0.5)
str(model_cv)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, lambda1 = c(0.01, 0.02), lambda2 = c(0.01, 0.02),
model = "GL+fused", cv_folds = 2, alpha = 0.5)
q = 3
H = NULL
for (i in 2:q)
for (j in 1:(i-1)){
newrow = numeric(q)
newrow[i] = -1
newrow[j] = 1
H = rbind(H, newrow)
}
H
blockD = lambda3 * H
if (lambda2 != 0){
blockD = rbind(diag(rep(lambda2, q)), blockD)
}
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, lambda1 = c(0.01, 0.02), lambda2 = c(0.01, 0.02),
model = "GL+fused", cv_folds = 2, alpha = 0.5)
str(model_cv)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, lambda1 = c(0.01, 0.02), lambda2 = c(0.01, 0.02),
model = "GL+fused", cv_folds = 2, alpha = 0.5)
str(model_cv)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, lambda1 = c(0.01, 0.02), lambda2 = c(0.01, 0.02),
model = "SGL+fused", cv_folds = 2, alpha = 0.5)
str(model_cv)
library(devtools)
document()
library(MetaPersonalized)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, lambda1 = c(0.01, 0.02), lambda2 = c(0.01, 0.02),
model = "SGL+fused", cv_folds = 2, alpha = 0.5)
str(model_cv)
replicate(c(1,2,3),5)
replicate(5,c(1,2,3))
?mapply
replicate(5, list())
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "fused", unique_rule = FALSE,
lambda1 = c(0, 0.2), lambda2 = c(0.01, 0.2))
length(model_info$betalist)
split(x, rep(1:ncol(x), each = nrow(x)))
A
A = matrix(1:6, nrow = 2)
A
split(A, rep(1:ncol(A), each = nrow(A)))
split(A, rep(1:row(A), each = ncol(A)))
split(A, rep(1:nrow(A), each = ncol(A)))
split(x, col(x))
split(A, col(A))
split(A, row(A))
model_info$betalist[[1]]
mp = model_info
i = 1
benefit_score[[i]] = mapply(function(study_intercept, study_x, study_beta) study_intercept + study_x %*% study_beta,
study_x = Xlist,
study_intercept = as.list(mp$interceptlist[[i]]), study_beta = split(mp$betalist[[i]], row(mp$betalist[[i]])),
SIMPLIFY = FALSE)
benefit_score = mapply(function(intercept, beta) sweep(newx %*% t(beta), 2, intercept, '+'),
intercept = mp$interceptlist, beta = mp$betalist, SIMPLIFY = FALSE)
treatment = lapply(benefit_score, function(score) ifelse(score > 0.5, 1, 0))
benefit_score = replicate(length(mp$betalist), list())
treatment = replicate(length(mp$betalist), list())
Xlist = mp$Xlist
benefit_score = replicate(length(mp$betalist), list())
treatment = replicate(length(mp$betalist), list())
benefit_score[[i]] = mapply(function(study_intercept, study_x, study_beta) study_intercept + study_x %*% study_beta,
study_x = Xlist,
study_intercept = as.list(mp$interceptlist[[i]]), study_beta = split(mp$betalist[[i]], row(mp$betalist[[i]])),
SIMPLIFY = FALSE)
benefit_score
str(benefit_score)
treatment[[i]] = lapply(function(score) ifelse(score > 0.5, 1, 0), score = benefit_score[[i]])
treatment[[i]] = lapply( benefit_score[[i]], function(score) ifelse(score > 0.5, 1, 0))
str(treatment[[i]])
mp$interceptlist
as.list(mp$interceptlist[[1]])
mp_cv = model_cv
mp_cv$''
mp_cv$intercept
mp_cv$beta
pred_orig = predict(model_info)
document()
library(devtools)
document()
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "lasso", unique_rule = FALSE,
lambda1 = c(0, 0.2), lambda2 = c(0.01, 0.2))
pred_orig = predict(model_info)
str(pred_orig)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "lasso", unique_rule = FALSE)
pred_orig = predict(model_info)
str(pred_orig)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, lambda2 = c(0.01, 0.02),
model = "lasso", cv_folds = 2, alpha = 0.5)
pred_orig_cv = predict(model_cv)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist,
model = "lasso", cv_folds = 2)
pred_orig_cv = predict(model_cv)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist,
model = "lasso", cv_folds = 2)
pred_orig_cv = predict(model_cv)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist,
model = "lasso", cv_folds = 2)
pred_orig_cv = predict(model_cv)
str(pred_orig_cv)
a = 0
which(a == 0)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "linear", unique_rule = FALSE)
pred_orig = predict(model_info)
str(pred_orig)
install.packages("ggplot2")
install.packages("gridExtra")
a = NULL
mean(a)
a[1 == 2]
mean(a[1 == 2])
mean(a[1 == 2], na.rm = TRUE)
A = as.list(c(1,2,3))
c(A, 5)
document()
library(devtools)
document()
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "linear", unique_rule = FALSE)
pred_orig = predict(model_info)
str(pred_orig)
str(model_info)
plot = plot(model_info)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "linear", unique_rule = FALSE)
plot = plot(model_info)
class(model_info)
mp = model_info
Ylist = mp$Ylist
Trtlist = mp$Trtlist
unique_rule = mp$unique_rule
q = mp$number_studies
model = mp$model
if (unique_rule == TRUE){
pred = predict(mp)$treatment[[unique_ind]]
} else {
if (model == "linear"){
pred = predict(mp)$treatment[[1]]
} else {
nlambda1 = length(mp$lambda1)
nlambda2 = length(mp$lambda2)
pred = predict(mp)$treatment[[(ind1 - 1) * nlambda2 + ind2]]
}
}
str(pred)
meanlist = mapply(function(Trt, pred, Y) list(mean1 = mean(Y[Trt == 1 & pred == 1]), mean2 = mean(Y[Trt == 0 & pred == 1]),
mean3 = mean(Y[Trt == 0 & pred == 0]), mean4 = mean(Y[Trt == 1 & pred == 0])),
Trt = Trtlist, pred = pred, Y = Ylist, SIMPLIFY = FALSE)
meanlist
meanlist = mapply(function(Trt, pred, Y) c(mean(Y[Trt == 1 & pred == 1]), mean(Y[Trt == 0 & pred == 1]),
mean(Y[Trt == 0 & pred == 0]), mean(Y[Trt == 1 & pred == 0])),
Trt = Trtlist, pred = pred, Y = Ylist, SIMPLIFY = FALSE)
meanlist
plotlist = replicate(q, list())
for (i in 1:q){
plot_dat = data.frame(mean = meanlist[[i]], recommend = c(1, 1, 0, 0), receive = c(1, 0, 0, 1))
plotlist[[i]] = ggplot(data = plot_dat, aes(y = mean, x = receive, group = recommend)) +
geom_line(aes(color = recommend)) + ggtitle(label = paste("Study ",i))
}
library(ggplot2)
plotlist = replicate(q, list())
for (i in 1:q){
plot_dat = data.frame(mean = meanlist[[i]], recommend = c(1, 1, 0, 0), receive = c(1, 0, 0, 1))
plotlist[[i]] = ggplot(data = plot_dat, aes(y = mean, x = receive, group = recommend)) +
geom_line(aes(color = recommend)) + ggtitle(label = paste("Study ",i))
}
plotlist[[1]]
plotlist = replicate(q, list())
for (i in 1:q){
plot_dat = data.frame(mean = meanlist[[i]], recommend = as.factor(c(1, 1, 0, 0)),
receive = as.factor(c(1, 0, 0, 1)))
plotlist[[i]] = ggplot(data = plot_dat, aes(y = mean, x = receive, group = recommend)) +
geom_line(aes(color = recommend)) + ggtitle(label = paste("Study ",i))
}
plotlist[[1]]
comb_plot = do.call(grid.arrange, c(plotlist, nrow = 2))
library(gridExtra)
comb_plot = do.call(grid.arrange, c(plotlist, nrow = 2))
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "linear", unique_rule = FALSE)
plot = plot(model_info)
plot
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist,
model = "lasso", cv_folds = 2)
plot(model_cv)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist,
model = "lasso", cv_folds = 2)
plot(model_cv)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist,
model = "lasso", cv_folds = 2)
plot(model_cv)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist,
model = "lasso", cv_folds = 2)
plot(model_cv)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist,
model = "SGL", cv_folds = 2)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "SGL", unique_rule = FALSE)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "SGL", unique_rule = FALSE)
plot(model_info)
plot(model_info, ind1 = 10)
model_info$lambda1
model_info$lambda2
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
model_info = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "SGL", unique_rule = FALSE)
plot(model_info, ind1 = 10)
plot(model_info, ind1 = 10, ind2 = 1)
pred_orig = predict(model_info)
pred_orig$treatment[[10]]
table(pred_orig$treatment[[10]])
table(pred_orig$treatment[[10]][[2]])
table(pred_orig$treatment[[10]][[3]])
table(pred_orig$treatment[[10]][[4]])
table(pred_orig$treatment[[10]][[5]])
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist,
model = "SGL", cv_folds = 2)
plot(model_cv)
library(MetaPersonalized)
library(MetaPersonalized)
sim_dat = simulated_dataset(n = 200, sim_seed = 123)
model_SGL_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "SGL", lambda2 = seq(0.01, 0.1, 0.01),
unique_rule = FALSE)
model_SGL_fused_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "SGL+fused", lambda2 = seq(0.01, 0.1, 0.01),
unique_rule = FALSE)
names(model_SGL_cv)
library(MetaPersonalized)
model_SGL_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "SGL", lambda2 = seq(0.01, 0.1, 0.01),
unique_rule = FALSE)
model_SGL_fused_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "SGL+fused", lambda2 = seq(0.01, 0.1, 0.01),
unique_rule = FALSE)
model_SGL_cv$lambda
model_unique_lasso_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "lasso",
unique_rule = TRUE)
model_unique_lasso_cv$beta
model_unique_lasso_cv$intercept
model_unique_lasso_cv$unique_lambda
p = model_SGL$number_covariates
model_SGL = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "SGL", lambda2 = seq(0.01, 0.1, 0.01),
unique_rule = FALSE)
model_SGL_fused = MetaPersonalized(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist, model = "SGL+fused", lambda2 = seq(0.01, 0.1, 0.01),
unique_rule = FALSE)
p = model_SGL$number_covariates
newx = matrix(rnorm(10 * p), nrow = 10, ncol = p)
pred = predict(model_SGL, newx = newx, overall_rec = TRUE)
pred$treatment
pred$benefit_score
library(MetaPersonalized)
library(MetaPersonalized)
library(MetaPersonalized)
sim_data  = simulated_dataset(n = 200)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
sim_data  = simulated_dataset(n = 200, sim_seed = 123)
Xlist = sim_data[[1]]; Ylist = sim_data[[2]]; Trtlist = sim_data[[3]]
Plist = list(0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
plot(model_cv)
model_cv = MetaPersonalized_cv(Xlist = Xlist, Ylist = Ylist, Trtlist = Trtlist,
Plist = Plist,
model = "SGL", cv_folds = 2)
plot(model_cv)
library(MetaPersonalized)
library(MetaPersonalized)
1:4/2:3
file.exists("~/.ssh/id_rsa.pub")
